{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/Users/viraatdas/Documents/GitHub/BoilerMatch/frontend/node_modules/react-native-card-stack-swiper/CardStack.js\",\n    _this4 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar CardStack = function (_Component) {\n  _inherits(CardStack, _Component);\n\n  var _super = _createSuper(CardStack);\n\n  _createClass(CardStack, null, [{\n    key: \"distance\",\n    value: function distance(x, y) {\n      return Math.hypot(x, y);\n    }\n  }]);\n\n  function CardStack(props) {\n    var _this;\n\n    _classCallCheck(this, CardStack);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      drag: new Animated.ValueXY({\n        x: 0,\n        y: 0\n      }),\n      dragDistance: new Animated.Value(0),\n      sindex: 0,\n      cardA: null,\n      cardB: null,\n      topCard: 'cardA',\n      cards: [],\n      touchStart: 0\n    };\n    _this.distance = _this.constructor.distance;\n    _this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n        return false;\n      },\n      onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n        return false;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n        var isVerticalSwipe = Math.sqrt(Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2));\n\n        if (!_this.props.verticalSwipe && isVerticalSwipe) {\n          return false;\n        }\n\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10;\n      },\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n        var isVerticalSwipe = Math.sqrt(Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2));\n\n        if (!_this.props.verticalSwipe && isVerticalSwipe) {\n          return false;\n        }\n\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10;\n      },\n      onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {\n        _this.props.onSwipeStart();\n\n        _this.setState({\n          touchStart: new Date().getTime()\n        });\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        var movedX = gestureState.moveX - gestureState.x0;\n        var movedY = gestureState.moveY - gestureState.y0;\n\n        _this.props.onSwipe(movedX, movedY);\n\n        var _this$props = _this.props,\n            verticalSwipe = _this$props.verticalSwipe,\n            horizontalSwipe = _this$props.horizontalSwipe;\n\n        var dragDistance = _this.distance(horizontalSwipe ? gestureState.dx : 0, verticalSwipe ? gestureState.dy : 0);\n\n        _this.state.dragDistance.setValue(dragDistance);\n\n        _this.state.drag.setValue({\n          x: horizontalSwipe ? gestureState.dx : 0,\n          y: verticalSwipe ? gestureState.dy : 0\n        });\n      },\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n        return true;\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        _this.props.onSwipeEnd();\n\n        var currentTime = new Date().getTime();\n        var swipeDuration = currentTime - _this.state.touchStart;\n        var _this$props2 = _this.props,\n            verticalThreshold = _this$props2.verticalThreshold,\n            horizontalThreshold = _this$props2.horizontalThreshold,\n            disableTopSwipe = _this$props2.disableTopSwipe,\n            disableLeftSwipe = _this$props2.disableLeftSwipe,\n            disableRightSwipe = _this$props2.disableRightSwipe,\n            disableBottomSwipe = _this$props2.disableBottomSwipe;\n\n        if ((Math.abs(gestureState.dx) > horizontalThreshold || Math.abs(gestureState.dx) > horizontalThreshold * 0.6 && swipeDuration < 150) && _this.props.horizontalSwipe) {\n          var swipeDirection = gestureState.dx < 0 ? width * -1.5 : width * 1.5;\n\n          if (swipeDirection < 0 && !disableLeftSwipe) {\n            _this._nextCard('left', swipeDirection, gestureState.dy, _this.props.duration);\n          } else if (swipeDirection > 0 && !disableRightSwipe) {\n            _this._nextCard('right', swipeDirection, gestureState.dy, _this.props.duration);\n          } else {\n            _this._resetCard();\n          }\n        } else if ((Math.abs(gestureState.dy) > verticalThreshold || Math.abs(gestureState.dy) > verticalThreshold * 0.8 && swipeDuration < 150) && _this.props.verticalSwipe) {\n          var _swipeDirection = gestureState.dy < 0 ? height * -1 : height;\n\n          if (_swipeDirection < 0 && !disableTopSwipe) {\n            _this._nextCard('top', gestureState.dx, _swipeDirection, _this.props.duration);\n          } else if (_swipeDirection > 0 && !disableBottomSwipe) {\n            _this._nextCard('bottom', gestureState.dx, _swipeDirection, _this.props.duration);\n          } else {\n            _this._resetCard();\n          }\n        } else {\n          _this._resetCard();\n        }\n      },\n      onPanResponderTerminate: function onPanResponderTerminate(evt, gestureState) {},\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(evt, gestureState) {\n        return true;\n      }\n    });\n    return _this;\n  }\n\n  _createClass(CardStack, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (typeof this.props.children === 'undefined') return;\n\n      if (!this._isSameChildren(this.props.children, prevProps.children)) {\n        var children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n        var aIndex = this.state.topCard == 'cardA' ? this._getIndex(this.state.sindex - 2, children.length) : this._getIndex(this.state.sindex - 1, children.length);\n        var bIndex = this.state.topCard == 'cardB' ? this._getIndex(this.state.sindex - 2, children.length) : this._getIndex(this.state.sindex - 1, children.length);\n        this.setState({\n          cards: children,\n          cardA: children[aIndex] || null,\n          cardB: children[bIndex] || null\n        });\n      }\n    }\n  }, {\n    key: \"_getIndex\",\n    value: function _getIndex(index, cards) {\n      return this.props.loop ? this.mod(index, cards) : index;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initDeck();\n    }\n  }, {\n    key: \"_isSameChildren\",\n    value: function _isSameChildren(a, b) {\n      if (typeof a != typeof b) return false;\n      if (typeof a === 'undefined') return false;\n\n      if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length != b.length) return false;\n\n        for (var i in a) {\n          if (a[i].key != b[i].key) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      if (a.key !== b.key) return false;\n      return true;\n    }\n  }, {\n    key: \"initDeck\",\n    value: function initDeck() {\n      if (typeof this.props.children === 'undefined') return;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          loop = _this$props3.loop;\n      var cards = Array.isArray(children) ? children : [children];\n      var initialIndexA = this.props.initialIndex < cards.length ? this.props.initialIndex : 0;\n      var initialIndexB = loop ? this.mod(initialIndexA + 1, cards.length) : initialIndexA + 1;\n      var cardA = cards[initialIndexA] || null;\n      var cardB = cards[initialIndexB] || null;\n      this.setState({\n        cards: cards,\n        cardA: cardA,\n        cardB: cardB,\n        sindex: initialIndexB + 1\n      });\n    }\n  }, {\n    key: \"_resetCard\",\n    value: function _resetCard() {\n      Animated.timing(this.state.dragDistance, {\n        toValue: 0,\n        duration: this.props.duration,\n        useNativeDriver: this.props.useNativeDriver || false\n      }).start();\n      Animated.spring(this.state.drag, {\n        toValue: {\n          x: 0,\n          y: 0\n        },\n        duration: this.props.duration,\n        useNativeDriver: this.props.useNativeDriver || false\n      }).start();\n    }\n  }, {\n    key: \"goBackFromTop\",\n    value: function goBackFromTop() {\n      this._goBack('top');\n    }\n  }, {\n    key: \"goBackFromRight\",\n    value: function goBackFromRight() {\n      this._goBack('right');\n    }\n  }, {\n    key: \"goBackFromLeft\",\n    value: function goBackFromLeft() {\n      this._goBack('left');\n    }\n  }, {\n    key: \"goBackFromBottom\",\n    value: function goBackFromBottom() {\n      this._goBack('bottom');\n    }\n  }, {\n    key: \"mod\",\n    value: function mod(n, m) {\n      return (n % m + m) % m;\n    }\n  }, {\n    key: \"_goBack\",\n    value: function _goBack(direction) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          cards = _this$state.cards,\n          sindex = _this$state.sindex,\n          topCard = _this$state.topCard;\n      if (sindex - 3 < 0 && !this.props.loop) return;\n      var previusCardIndex = this.mod(sindex - 3, cards.length);\n      var update = {};\n\n      if (topCard === 'cardA') {\n        update = _objectSpread(_objectSpread({}, update), {}, {\n          cardB: cards[previusCardIndex]\n        });\n      } else {\n        update = _objectSpread(_objectSpread({}, update), {}, {\n          cardA: cards[previusCardIndex]\n        });\n      }\n\n      this.setState(_objectSpread(_objectSpread({}, update), {}, {\n        topCard: topCard === 'cardA' ? 'cardB' : 'cardA',\n        sindex: sindex - 1\n      }), function () {\n        switch (direction) {\n          case 'top':\n            _this2.state.drag.setValue({\n              x: 0,\n              y: -height\n            });\n\n            _this2.state.dragDistance.setValue(height);\n\n            break;\n\n          case 'left':\n            _this2.state.drag.setValue({\n              x: -width,\n              y: 0\n            });\n\n            _this2.state.dragDistance.setValue(width);\n\n            break;\n\n          case 'right':\n            _this2.state.drag.setValue({\n              x: width,\n              y: 0\n            });\n\n            _this2.state.dragDistance.setValue(width);\n\n            break;\n\n          case 'bottom':\n            _this2.state.drag.setValue({\n              x: 0,\n              y: height\n            });\n\n            _this2.state.dragDistance.setValue(width);\n\n            break;\n\n          default:\n        }\n\n        Animated.spring(_this2.state.dragDistance, {\n          toValue: 0,\n          duration: _this2.props.duration,\n          useNativeDriver: _this2.props.useNativeDriver || false\n        }).start();\n        Animated.spring(_this2.state.drag, {\n          toValue: {\n            x: 0,\n            y: 0\n          },\n          duration: _this2.props.duration,\n          useNativeDriver: _this2.props.useNativeDriver || false\n        }).start();\n      });\n    }\n  }, {\n    key: \"swipeTop\",\n    value: function swipeTop() {\n      var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      this._nextCard('top', 0, -height, d || this.props.duration);\n    }\n  }, {\n    key: \"swipeBottom\",\n    value: function swipeBottom() {\n      var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      this._nextCard('bottom', 0, height, d || this.props.duration);\n    }\n  }, {\n    key: \"swipeRight\",\n    value: function swipeRight() {\n      var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      this._nextCard('right', width * 1.5, 0, d || this.props.duration);\n    }\n  }, {\n    key: \"swipeLeft\",\n    value: function swipeLeft() {\n      var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      this._nextCard('left', -width * 1.5, 0, d || this.props.duration);\n    }\n  }, {\n    key: \"_nextCard\",\n    value: function _nextCard(direction, x, y) {\n      var _this3 = this;\n\n      var duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 400;\n      var _this$props4 = this.props,\n          verticalSwipe = _this$props4.verticalSwipe,\n          horizontalSwipe = _this$props4.horizontalSwipe,\n          loop = _this$props4.loop;\n      var _this$state2 = this.state,\n          sindex = _this$state2.sindex,\n          cards = _this$state2.cards,\n          topCard = _this$state2.topCard;\n      var nextCard = loop ? Math.abs(sindex) % cards.length : sindex;\n      var index = loop ? this.mod(nextCard - 2, cards.length) : nextCard - 2;\n\n      if (index === cards.length - 1) {\n        this.props.onSwipedAll();\n      }\n\n      if (sindex - 2 < cards.length || loop) {\n        Animated.spring(this.state.dragDistance, {\n          toValue: 220,\n          duration: duration,\n          useNativeDriver: this.props.useNativeDriver || false\n        }).start();\n        Animated.timing(this.state.drag, {\n          toValue: {\n            x: horizontalSwipe ? x : 0,\n            y: verticalSwipe ? y : 0\n          },\n          duration: duration,\n          useNativeDriver: this.props.useNativeDriver || false\n        }).start(function () {\n          var newTopCard = topCard === 'cardA' ? 'cardB' : 'cardA';\n          var update = {};\n\n          if (newTopCard === 'cardA') {\n            update = _objectSpread(_objectSpread({}, update), {}, {\n              cardB: cards[nextCard]\n            });\n          }\n\n          if (newTopCard === 'cardB') {\n            update = _objectSpread(_objectSpread({}, update), {}, {\n              cardA: cards[nextCard]\n            });\n          }\n\n          _this3.state.drag.setValue({\n            x: 0,\n            y: 0\n          });\n\n          _this3.state.dragDistance.setValue(0);\n\n          _this3.setState(_objectSpread(_objectSpread({}, update), {}, {\n            topCard: newTopCard,\n            sindex: nextCard + 1\n          }));\n\n          _this3.props.onSwiped(index);\n\n          switch (direction) {\n            case 'left':\n              _this3.props.onSwipedLeft(index);\n\n              if (_this3.state.cards[index] && _this3.state.cards[index].props.onSwipedLeft) _this3.state.cards[index] && _this3.state.cards[index].props.onSwipedLeft();\n              break;\n\n            case 'right':\n              _this3.props.onSwipedRight(index);\n\n              if (_this3.state.cards[index] && _this3.state.cards[index].props.onSwipedRight) _this3.state.cards[index].props.onSwipedRight();\n              break;\n\n            case 'top':\n              _this3.props.onSwipedTop(index);\n\n              if (_this3.state.cards[index] && _this3.state.cards[index].props.onSwipedTop) _this3.state.cards[index].props.onSwipedTop();\n              break;\n\n            case 'bottom':\n              _this3.props.onSwipedBottom(index);\n\n              if (_this3.state.cards[index] && _this3.state.cards[index].props.onSwipedBottom) _this3.state.cards[index].props.onSwipedBottom();\n              break;\n\n            default:\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_setPointerEvents\",\n    value: function _setPointerEvents(topCard, topCardName) {\n      return {\n        pointerEvents: topCard === topCardName ? \"auto\" : \"none\"\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          secondCardZoom = _this$props5.secondCardZoom,\n          renderNoMoreCards = _this$props5.renderNoMoreCards;\n      var _this$state3 = this.state,\n          drag = _this$state3.drag,\n          dragDistance = _this$state3.dragDistance,\n          cardA = _this$state3.cardA,\n          cardB = _this$state3.cardB,\n          topCard = _this$state3.topCard,\n          sindex = _this$state3.sindex;\n      var scale = dragDistance.interpolate({\n        inputRange: [0, 10, 220],\n        outputRange: [secondCardZoom, secondCardZoom, 1],\n        extrapolate: 'clamp'\n      });\n      var rotate = drag.x.interpolate({\n        inputRange: [width * -1.5, 0, width * 1.5],\n        outputRange: this.props.outputRotationRange,\n        extrapolate: 'clamp'\n      });\n      return React.createElement(View, _extends({}, this._panResponder.panHandlers, {\n        style: [{\n          position: 'relative'\n        }, this.props.style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 7\n        }\n      }), renderNoMoreCards(), React.createElement(Animated.View, _extends({}, this._setPointerEvents(topCard, 'cardB'), {\n        style: [_objectSpread(_objectSpread({\n          position: 'absolute',\n          zIndex: topCard === 'cardB' ? 3 : 2\n        }, Platform.select({\n          android: {\n            elevation: topCard === 'cardB' ? 3 : 2\n          }\n        })), {}, {\n          transform: [{\n            rotate: topCard === 'cardB' ? rotate : '0deg'\n          }, {\n            translateX: topCard === 'cardB' ? drag.x : 0\n          }, {\n            translateY: topCard === 'cardB' ? drag.y : 0\n          }, {\n            scale: topCard === 'cardB' ? 1 : scale\n          }]\n        }), this.props.cardContainerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 9\n        }\n      }), cardB), React.createElement(Animated.View, _extends({}, this._setPointerEvents(topCard, 'cardA'), {\n        style: [_objectSpread(_objectSpread({\n          position: 'absolute',\n          zIndex: topCard === 'cardA' ? 3 : 2\n        }, Platform.select({\n          android: {\n            elevation: topCard === 'cardA' ? 3 : 2\n          }\n        })), {}, {\n          transform: [{\n            rotate: topCard === 'cardA' ? rotate : '0deg'\n          }, {\n            translateX: topCard === 'cardA' ? drag.x : 0\n          }, {\n            translateY: topCard === 'cardA' ? drag.y : 0\n          }, {\n            scale: topCard === 'cardA' ? 1 : scale\n          }]\n        }), this.props.cardContainerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 9\n        }\n      }), cardA));\n    }\n  }]);\n\n  return CardStack;\n}(Component);\n\nCardStack.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  cardContainerStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  secondCardZoom: PropTypes.number,\n  loop: PropTypes.bool,\n  initialIndex: PropTypes.number,\n  renderNoMoreCards: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  onSwipeStart: PropTypes.func,\n  onSwipeEnd: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n  onSwipe: PropTypes.func,\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  outputRotationRange: PropTypes.array,\n  duration: PropTypes.number\n};\nCardStack.defaultProps = {\n  style: {},\n  cardContainerStyle: {},\n  secondCardZoom: 0.95,\n  loop: false,\n  initialIndex: 0,\n  renderNoMoreCards: function renderNoMoreCards() {\n    return React.createElement(Text, {\n      __self: _this4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 38\n      }\n    }, \"No More Cards\");\n  },\n  onSwipeStart: function onSwipeStart() {\n    return null;\n  },\n  onSwipeEnd: function onSwipeEnd() {\n    return null;\n  },\n  onSwiped: function onSwiped() {},\n  onSwipedLeft: function onSwipedLeft() {},\n  onSwipedRight: function onSwipedRight() {},\n  onSwipedTop: function onSwipedTop() {},\n  onSwipedBottom: function onSwipedBottom() {},\n  onSwipedAll: function onSwipedAll() {\n    return _regeneratorRuntime.async(function onSwipedAll$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  onSwipe: function onSwipe() {},\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  verticalSwipe: true,\n  verticalThreshold: height / 4,\n  horizontalSwipe: true,\n  horizontalThreshold: width / 2,\n  outputRotationRange: ['-15deg', '0deg', '15deg'],\n  duration: 300\n};\npolyfill(CardStack);\nexport default CardStack;","map":{"version":3,"sources":["/Users/viraatdas/Documents/GitHub/BoilerMatch/frontend/node_modules/react-native-card-stack-swiper/CardStack.js"],"names":["React","Component","PropTypes","polyfill","Dimensions","get","height","width","CardStack","x","y","Math","hypot","props","state","drag","Animated","ValueXY","dragDistance","Value","sindex","cardA","cardB","topCard","cards","touchStart","distance","constructor","_panResponder","PanResponder","create","onStartShouldSetPanResponder","evt","gestureState","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","isVerticalSwipe","sqrt","pow","dx","dy","verticalSwipe","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onSwipeStart","setState","Date","getTime","onPanResponderMove","movedX","moveX","x0","movedY","moveY","y0","onSwipe","horizontalSwipe","setValue","onPanResponderTerminationRequest","onPanResponderRelease","onSwipeEnd","currentTime","swipeDuration","verticalThreshold","horizontalThreshold","disableTopSwipe","disableLeftSwipe","disableRightSwipe","disableBottomSwipe","abs","swipeDirection","_nextCard","duration","_resetCard","onPanResponderTerminate","onShouldBlockNativeResponder","prevProps","children","_isSameChildren","Array","isArray","aIndex","_getIndex","length","bIndex","index","loop","mod","initDeck","a","b","i","key","initialIndexA","initialIndex","initialIndexB","timing","toValue","useNativeDriver","start","spring","_goBack","n","m","direction","previusCardIndex","update","d","nextCard","onSwipedAll","newTopCard","onSwiped","onSwipedLeft","onSwipedRight","onSwipedTop","onSwipedBottom","topCardName","pointerEvents","secondCardZoom","renderNoMoreCards","scale","interpolate","inputRange","outputRange","extrapolate","rotate","outputRotationRange","panHandlers","position","style","_setPointerEvents","zIndex","Platform","select","android","elevation","transform","translateX","translateY","cardContainerStyle","propTypes","oneOfType","array","object","isRequired","number","bool","func","element","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport { polyfill } from 'react-lifecycles-compat';\nimport {\n  View,\n  Animated,\n  PanResponder,\n  Dimensions,\n  Text,\n  Platform\n} from 'react-native';\n\nconst { height, width } = Dimensions.get('window');\n\nclass CardStack extends Component {\n\n  static distance(x, y) {\n    return Math.hypot(x, y);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      drag: new Animated.ValueXY({ x: 0, y: 0 }),\n      dragDistance: new Animated.Value(0),\n      sindex: 0, // index to the next card to be renderd mod card.length\n      cardA: null,\n      cardB: null,\n      topCard: 'cardA',\n      cards: [],\n      touchStart: 0,\n    };\n    this.distance = this.constructor.distance;\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (evt, gestureState) => false,\n      onStartShouldSetPanResponderCapture: (evt, gestureState) => false,\n      onMoveShouldSetPanResponder: (evt, gestureState) => {\n        const isVerticalSwipe = Math.sqrt(\n          Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2)\n        )\n        if (!this.props.verticalSwipe && isVerticalSwipe) {\n          return false\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10\n      },\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => {\n        const isVerticalSwipe = Math.sqrt(\n          Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2)\n        )\n        if (!this.props.verticalSwipe && isVerticalSwipe) {\n          return false\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10\n      },\n      onPanResponderGrant: (evt, gestureState) => {\n        this.props.onSwipeStart();\n        this.setState({ touchStart: new Date().getTime() });\n      },\n      onPanResponderMove: (evt, gestureState) => {\n        const movedX = gestureState.moveX - gestureState.x0;\n        const movedY = gestureState.moveY - gestureState.y0;\n        this.props.onSwipe(movedX, movedY);\n        const { verticalSwipe, horizontalSwipe } = this.props;\n        const dragDistance = this.distance((horizontalSwipe) ? gestureState.dx : 0, (verticalSwipe) ? gestureState.dy : 0);\n        this.state.dragDistance.setValue(dragDistance);\n        this.state.drag.setValue({ x: (horizontalSwipe) ? gestureState.dx : 0, y: (verticalSwipe) ? gestureState.dy : 0 });\n      },\n      onPanResponderTerminationRequest: (evt, gestureState) => true,\n      onPanResponderRelease: (evt, gestureState) => {\n        this.props.onSwipeEnd();\n        const currentTime = new Date().getTime();\n        const swipeDuration = currentTime - this.state.touchStart;\n        const {\n          verticalThreshold,\n          horizontalThreshold,\n          disableTopSwipe,\n          disableLeftSwipe,\n          disableRightSwipe,\n          disableBottomSwipe,\n        } = this.props;\n\n        if (((Math.abs(gestureState.dx) > horizontalThreshold) ||\n          (Math.abs(gestureState.dx) > horizontalThreshold * 0.6 &&\n            swipeDuration < 150)\n        ) && this.props.horizontalSwipe) {\n\n          const swipeDirection = (gestureState.dx < 0) ? width * -1.5 : width * 1.5;\n          if (swipeDirection < 0 && !disableLeftSwipe) {\n            this._nextCard('left', swipeDirection, gestureState.dy, this.props.duration);\n          }\n          else if (swipeDirection > 0 && !disableRightSwipe) {\n            this._nextCard('right', swipeDirection, gestureState.dy, this.props.duration);\n          }\n          else {\n            this._resetCard();\n          }\n        } else if (((Math.abs(gestureState.dy) > verticalThreshold) ||\n          (Math.abs(gestureState.dy) > verticalThreshold * 0.8 &&\n            swipeDuration < 150)\n        ) && this.props.verticalSwipe) {\n\n          const swipeDirection = (gestureState.dy < 0) ? height * -1 : height;\n          if (swipeDirection < 0 && !disableTopSwipe) {\n\n            this._nextCard('top', gestureState.dx, swipeDirection, this.props.duration);\n          }\n          else if (swipeDirection > 0 && !disableBottomSwipe) {\n            this._nextCard('bottom', gestureState.dx, swipeDirection, this.props.duration);\n          }\n          else {\n            this._resetCard();\n          }\n        }\n        else {\n          this._resetCard();\n        }\n      },\n      onPanResponderTerminate: (evt, gestureState) => {\n      },\n      onShouldBlockNativeResponder: (evt, gestureState) => {\n        return true;\n      },\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (typeof this.props.children === 'undefined') return;\n    if (!this._isSameChildren(this.props.children, prevProps.children)) {\n      const children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n      let aIndex = (this.state.topCard == 'cardA') ?\n        this._getIndex(this.state.sindex - 2, children.length) :\n        this._getIndex(this.state.sindex - 1, children.length);\n      let bIndex = (this.state.topCard == 'cardB') ?\n        this._getIndex(this.state.sindex - 2, children.length) :\n        this._getIndex(this.state.sindex - 1, children.length);\n      this.setState({\n        cards: children,\n        cardA: children[aIndex] || null,\n        cardB: children[bIndex] || null\n      });\n    }\n  }\n\n  _getIndex(index, cards){\n    return this.props.loop ? \n      this.mod(index, cards):\n      index;\n  }\n\n  componentDidMount() {\n    this.initDeck();\n  }\n\n  _isSameChildren(a, b) {\n    if (typeof a != typeof b) return false;\n    if (typeof a === 'undefined') return false;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      if (a.length != b.length) return false;\n      for (let i in a) {\n        if (a[i].key != b[i].key) { return false }\n      }\n      return true;\n    }\n    if (a.key !== b.key) return false;\n\n    return true\n  }\n\n  initDeck() {\n    if (typeof this.props.children === 'undefined') return;\n    const { children, loop } = this.props;\n    const cards = Array.isArray(children) ? children : [children];\n    const initialIndexA = this.props.initialIndex < cards.length ? this.props.initialIndex : 0;\n    const initialIndexB = loop ? this.mod(initialIndexA + 1, cards.length) : initialIndexA + 1;\n    const cardA = cards[initialIndexA] || null;\n    const cardB = cards[initialIndexB] || null;\n    this.setState({\n      cards,\n      cardA,\n      cardB,\n      sindex: initialIndexB + 1,\n    });\n  }\n\n  _resetCard() {\n    Animated.timing(\n      this.state.dragDistance,\n      {\n        toValue: 0,\n        duration: this.props.duration,\n        useNativeDriver: this.props.useNativeDriver || false,\n      }\n    ).start();\n    Animated.spring(\n      this.state.drag,\n      {\n        toValue: { x: 0, y: 0 },\n        duration: this.props.duration,\n        useNativeDriver: this.props.useNativeDriver || false,\n      }\n    ).start();\n  }\n\n  goBackFromTop() {\n    this._goBack('top');\n  }\n\n  goBackFromRight() {\n    this._goBack('right');\n  }\n\n  goBackFromLeft() {\n    this._goBack('left');\n  }\n\n  goBackFromBottom() {\n    this._goBack('bottom');\n  }\n\n  mod(n, m) {\n    return ((n % m) + m) % m;\n  }\n\n  _goBack(direction) {\n    const { cards, sindex, topCard } = this.state;\n\n    if ((sindex - 3) < 0 && !this.props.loop) return;\n\n    const previusCardIndex = this.mod(sindex - 3, cards.length)\n    let update = {};\n    if (topCard === 'cardA') {\n      update = {\n        ...update,\n        cardB: cards[previusCardIndex]\n\n      }\n    } else {\n      update = {\n        ...update,\n        cardA: cards[previusCardIndex],\n      }\n    }\n\n    this.setState({\n      ...update,\n      topCard: (topCard === 'cardA') ? 'cardB' : 'cardA',\n      sindex: sindex - 1\n    }, () => {\n\n      switch (direction) {\n        case 'top':\n          this.state.drag.setValue({ x: 0, y: -height });\n          this.state.dragDistance.setValue(height);\n          break;\n        case 'left':\n          this.state.drag.setValue({ x: -width, y: 0 });\n          this.state.dragDistance.setValue(width);\n          break;\n        case 'right':\n          this.state.drag.setValue({ x: width, y: 0 });\n          this.state.dragDistance.setValue(width);\n          break;\n        case 'bottom':\n          this.state.drag.setValue({ x: 0, y: height });\n          this.state.dragDistance.setValue(width);\n          break;\n        default:\n\n      }\n\n      Animated.spring(\n        this.state.dragDistance,\n        {\n          toValue: 0,\n          duration: this.props.duration,\n          useNativeDriver: this.props.useNativeDriver || false,\n        }\n      ).start();\n\n      Animated.spring(\n        this.state.drag,\n        {\n          toValue: { x: 0, y: 0 },\n          duration: this.props.duration,\n          useNativeDriver: this.props.useNativeDriver || false,\n        }\n      ).start();\n    })\n  }\n\n  swipeTop(d = null) {\n    this._nextCard('top', 0, -height, d || this.props.duration);\n  }\n\n  swipeBottom(d = null) {\n    this._nextCard('bottom', 0, height, d || this.props.duration);\n  }\n\n  swipeRight(d = null) {\n    this._nextCard('right', width * 1.5, 0, d || this.props.duration);\n  }\n\n  swipeLeft(d = null) {\n    this._nextCard('left', -width * 1.5, 0, d || this.props.duration);\n  }\n\n  _nextCard(direction, x, y, duration = 400) {\n    const { verticalSwipe, horizontalSwipe, loop } = this.props;\n    const { sindex, cards, topCard } = this.state;\n\n    // index for the next card to be renderd\n    const nextCard = (loop) ? (Math.abs(sindex) % cards.length) : sindex;\n\n    // index of the swiped card\n    const index = (loop) ? this.mod(nextCard - 2, cards.length) : nextCard - 2;\n\n    if (index === cards.length - 1) {\n      this.props.onSwipedAll();\n    }\n\n    if ((sindex - 2 < cards.length) || (loop)) {\n      Animated.spring(\n        this.state.dragDistance,\n        {\n          toValue: 220,\n          duration,\n          useNativeDriver: this.props.useNativeDriver || false,\n        }\n      ).start();\n\n      Animated.timing(\n        this.state.drag,\n        {\n          toValue: { x: (horizontalSwipe) ? x : 0, y: (verticalSwipe) ? y : 0 },\n          duration,\n          useNativeDriver: this.props.useNativeDriver || false,\n        }\n      ).start(() => {\n\n        const newTopCard = (topCard === 'cardA') ? 'cardB' : 'cardA';\n\n        let update = {};\n        if (newTopCard === 'cardA') {\n          update = {\n            ...update,\n            cardB: cards[nextCard]\n          };\n        }\n        if (newTopCard === 'cardB') {\n          update = {\n            ...update,\n            cardA: cards[nextCard],\n          };\n        }\n        this.state.drag.setValue({ x: 0, y: 0 });\n        this.state.dragDistance.setValue(0);\n        this.setState({\n          ...update,\n          topCard: newTopCard,\n          sindex: nextCard + 1\n        });\n\n        this.props.onSwiped(index);\n        switch (direction) {\n          case 'left':\n            this.props.onSwipedLeft(index);\n            if (this.state.cards[index] && this.state.cards[index].props.onSwipedLeft)\n              this.state.cards[index] && this.state.cards[index].props.onSwipedLeft();\n            break;\n          case 'right':\n            this.props.onSwipedRight(index);\n            if (this.state.cards[index] && this.state.cards[index].props.onSwipedRight)\n              this.state.cards[index].props.onSwipedRight();\n            break;\n          case 'top':\n            this.props.onSwipedTop(index);\n            if (this.state.cards[index] && this.state.cards[index].props.onSwipedTop)\n              this.state.cards[index].props.onSwipedTop();\n            break;\n          case 'bottom':\n            this.props.onSwipedBottom(index);\n            if (this.state.cards[index] && this.state.cards[index].props.onSwipedBottom)\n              this.state.cards[index].props.onSwipedBottom();\n            break;\n          default:\n        }\n      });\n\n    }\n  }\n\n\n  /**\n   * @description CardB’s click feature is trigger the CardA on the card stack. (Solved on Android)\n   * @see https://facebook.github.io/react-native/docs/view#pointerevents\n   */\n  _setPointerEvents(topCard, topCardName) {\n    return { pointerEvents: topCard === topCardName ? \"auto\" : \"none\" }\n  }\n\n  render() {\n\n    const { secondCardZoom, renderNoMoreCards } = this.props;\n    const { drag, dragDistance, cardA, cardB, topCard, sindex } = this.state;\n\n    const scale = dragDistance.interpolate({\n      inputRange: [0, 10, 220],\n      outputRange: [secondCardZoom, secondCardZoom, 1],\n      extrapolate: 'clamp',\n    });\n    const rotate = drag.x.interpolate({\n      inputRange: [width * -1.5, 0, width * 1.5],\n      outputRange: this.props.outputRotationRange,\n      extrapolate: 'clamp',\n    });\n\n    return (\n      <View {...this._panResponder.panHandlers} style={[{ position: 'relative' }, this.props.style]}>\n\n        {renderNoMoreCards()}\n\n        <Animated.View\n          {...this._setPointerEvents(topCard, 'cardB')}\n          style={[{\n            position: 'absolute',\n            zIndex: (topCard === 'cardB') ? 3 : 2,\n            ...Platform.select({\n              android: {\n                elevation: (topCard === 'cardB') ? 3 : 2,\n              }\n            }),\n            transform: [\n              { rotate: (topCard === 'cardB') ? rotate : '0deg' },\n              { translateX: (topCard === 'cardB') ? drag.x : 0 },\n              { translateY: (topCard === 'cardB') ? drag.y : 0 },\n              { scale: (topCard === 'cardB') ? 1 : scale },\n            ]\n          }, this.props.cardContainerStyle]}>\n          {cardB}\n        </Animated.View>\n        <Animated.View\n          {...this._setPointerEvents(topCard, 'cardA')}\n          style={[{\n            position: 'absolute',\n            zIndex: (topCard === 'cardA') ? 3 : 2,\n            ...Platform.select({\n              android: {\n                elevation: (topCard === 'cardA') ? 3 : 2,\n              }\n            }),\n            transform: [\n              { rotate: (topCard === 'cardA') ? rotate : '0deg' },\n              { translateX: (topCard === 'cardA') ? drag.x : 0 },\n              { translateY: (topCard === 'cardA') ? drag.y : 0 },\n              { scale: (topCard === 'cardA') ? 1 : scale },\n            ]\n          }, this.props.cardContainerStyle]}>\n          {cardA}\n        </Animated.View>\n\n      </View>\n    );\n  }\n}\n\nCardStack.propTypes = {\n\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n\n  style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  cardContainerStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  secondCardZoom: PropTypes.number,\n  loop: PropTypes.bool,\n  initialIndex: PropTypes.number,\n  renderNoMoreCards: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  onSwipeStart: PropTypes.func,\n  onSwipeEnd: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n  onSwipe: PropTypes.func,\n\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  outputRotationRange: PropTypes.array,\n  duration: PropTypes.number\n}\n\nCardStack.defaultProps = {\n\n  style: {},\n  cardContainerStyle: {},\n  secondCardZoom: 0.95,\n  loop: false,\n  initialIndex: 0,\n  renderNoMoreCards: () => { return (<Text>No More Cards</Text>) },\n  onSwipeStart: () => null,\n  onSwipeEnd: () => null,\n  onSwiped: () => { },\n  onSwipedLeft: () => { },\n  onSwipedRight: () => { },\n  onSwipedTop: () => { },\n  onSwipedBottom: () => { },\n  onSwipedAll: async () => { },\n  onSwipe: () => { },\n\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  verticalSwipe: true,\n  verticalThreshold: height / 4,\n  horizontalSwipe: true,\n  horizontalThreshold: width / 2,\n  outputRotationRange: ['-15deg', '0deg', '15deg'],\n  duration: 300\n}\npolyfill(CardStack);\nexport default CardStack;\n"]},"metadata":{},"sourceType":"module"}